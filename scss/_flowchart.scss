/* 
    Created on : Aug 1, 2014, 6:55:27 PM
    Author     : Michael Zijlstra <mzijlstra at mum.edu>
*/
/* General components */
.del {
    position: absolute;
    color: white;
    background-color: #DD4444;
    padding: 2px 4px;
    border: $line $border;
    display: none;
    cursor: pointer;
}
.arrow_down {
    width: 0px;
    height: 0px;
    border-top: $arrow $border;
    border-left: $arrow $hide; 
    border-right: $arrow $hide; 
    margin-left: $size - $arrow;
}


/* variables section */
.variable {
    padding-left: 15px;
    position: relative;

    .del {
        top: 2px;
        left: -2px;
    }
    .type_container {
        display: inline-block;
        width: 65px;
        padding-left: 3px;
    }
}
div.variable:hover .del {
    display: block;
}
div.variable.bottom .del {
    display: none;
}
.variable.inuse .del {
    background-color: $menu;
    border-color: $hl;
    color: $hl;
}

/* begin and end of flow chart */
.start, .stop { 
    position: relative;
    width: 80px;
    height: 80px;
    margin-left: 20px; 
    border: $line $border;
    border-radius: 55px;

    .text {
        position: absolute;
        left: 6px;
        top: 26px;
        padding: 5px 0px;
        background-color: $bg;
        white-space: nowrap;
    }

    input {
        position: absolute;
        top: 0px;
        left: 25px;
        background-color: $bg;    

    }
}
.stop input {
    left: 42px;
}

/* connections between statements */
.connection {
    cursor: pointer;

    .line {
        width: 0px;
        height: 15px;
        margin-left: $size - $line;
        border: $line $border;
    }
    .point {
        width: 0px;
        height: 0px;
        margin-left: $size - $point;
        border: $point $border;
        border-radius: $point;
    }
}

.connection:hover .point {
    position: relative;
    z-index: 3;
    background-color: $bg;
    width: 4px;
    height: 4px;
    border: 1px solid $fg;
}

/* all statements */ 
.statement {
    position: relative;    

    .del {
        top: 0px;
        left: 0px;        
    }
}

.statement:hover > .del, .diamond:hover .del {
    display: block;
    z-index: 10;
}

/* assignment statements input/output/assignment */
.assignment {
    position: relative;
    padding: 17px;
    margin-left: 22px;

    .var_container {
        float: left;

        .menu {
            position: absolute;
            top: 45px;
            left: 17px;
            min-width: 100px;
            min-height: 10px;
        }
    }
    .var_container:hover .menu {
        display: block;
    }

    .var, .io {
        background-color: $bg;
        border: 2*$line $border;
        padding: 15px;
    }

    .exp {
        @extend .var;
        position: relative;

        input[type=text] {
            position: absolute;
            top: -4px;
            left: -1px;
            width: 400px;
            border: 2*$line $border;
            padding: 15px;
            background-color: $bg;
        }
    }

    .asgn {
        font-size: 300%;
        line-height: 0px;
        vertical-align: middle;
    }
}


/* decision diamond for IF and WHILE statemetns */
.diamond {
    position: relative;

    .diamond_top_outside {
        width: 0px;
        height: 0px;
        position: relative;
        border-bottom: $size $border;
        border-left: $size $hide; 
        border-right: $size $hide; 

    }
    .diamond_bot_outside {
        width: 0px;
        height: 0px;
        position: relative;
        border-top: $size $border;
        border-left: $size $hide; 
        border-right: $size $hide; 
    }
    .diamond_top_inside {
        width: 0px;
        height: 0px;
        position: absolute;
        border-bottom: $size - (2 * $line) solid $bg;
        border-left: $size - (2 * $line) $hide; 
        border-right: $size - (2 * $line) $hide;
        left: -($size - (2 * $line));
        top: 2*$line;
    }
    .diamond_bot_inside {
        width: 0px;
        height: 0px;
        position: absolute;
        border-top: $size - (2 * $line) solid $bg;
        border-left: $size - (2 * $line) $hide; 
        border-right: $size - (2 * $line) $hide; 
        left: -($size - (2 * $line));
        top: -($size + $line);
    }

    .exp {
        position: absolute;
        top: 40px;
        left: 22px;    
        background: $bg;
        padding-top: 3px;

        input {
            position: absolute;
            top: -5px;
            left: 0px;
            width: 400px;
            border: $line $border;
            background: $bg;
        }
    }

    .label_stmt {
        position: absolute;
        top: 5px;
        left: 85px;
        font-weight: bold;
    }
    .label_true {
        position: absolute;
        top: 65px;
        left: 125px;
    }
    .label_false {
        position: absolute;
        top: 100px;
        left: 10px;
    }
}

/* if statements */
.if {
    position: relative;

    table {
        border-spacing: 0px;
        position: relative;
    }
    td {
        vertical-align: top;
        padding: 0px;
        position: relative;
    }
    .absolute_left, .absolute_right {
        z-index: 0;
        position: absolute;
        top: 0px;
        bottom: 0px;
        width: 0px;
        margin-left: $size - $line;
        border: $line $border;
    }

    .top_connect {
        position: absolute;
        top: -($size + $line);
        right: -($size + $line);
        left: ($size * 2) - ($line * 2);
        height: $size + $line;
        border-top: 2*$line $border;
        border-right: 2*$line $border;
    }
    .bot_left_connect {
        position: absolute;
        bottom: 0px;
        left: 0px;
        right: 0px;
        margin-left: $size + $line;
        border: $line $border;

        .arrow_left {
            position: absolute;
            top: -$arrow;
            left: 0px;    
            width: 0px;
            height: 0px;
            border-right: $arrow $border;
            border-top: $arrow $hide; 
            border-bottom: $arrow $hide; 
        }
    }
    .bot_right_connect {
        position: absolute;
        bottom: 0px;
        left: 0px;
        height: 0px;
        width: $size - $line;
        border: $line $border;
    }
}

/* while statements */
.while { 
    .true_connector {
        position: absolute;
        top: $size - $line;
        left: ($size * 2) - ($line * 2);
        width: 56px;
        height: $size - $line;
        border-top: 2*$line $border;
        border-right: 2*$line $border;
    }
    .container {
        position: relative;
    }
    .false_line {
        position: absolute;
        top: 0px;
        bottom: 0px;
        left: $size - $line;
        width: 0px;
        border: $line $border;
    }
    .return_line {
        position: absolute;
        top: -8px;
        bottom: -2px;
        left: 79px;
        width: 95px;
        border-left: 2*$line $border;
        border-bottom: 2*$line $border;
    }
    .loop_body {
        margin-left: 115px;
    }
    .arrow_up {
        position: absolute;
        left: -9px;
        top: -$arrow;
        width: 0px;
        height: 0px;
        border-bottom: $arrow $border;
        border-left: $arrow $hide; 
        border-right: $arrow $hide; 
    }
}
